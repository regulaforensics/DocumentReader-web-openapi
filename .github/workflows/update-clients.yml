name: update clients

on:
  push:
    branches: [develop]
  workflow_dispatch:
    inputs:
      title:
        description: "Title For PR's"
        required: true

jobs:

  update-js-client:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Specification Repo
        uses: actions/checkout@v4
        with:
          path: 'DocumentReader-web-openapi'
          ref: 'develop'
      - name: Checkout JS Client Repo
        uses: actions/checkout@v4
        with:
          repository: 'regulaforensics/DocumentReader-web-js-client'
          token: ${{ secrets.REGULA_GITHUB_PUSH_TOKEN }}
          path: 'js-client'
          ref: 'develop'
      - name: Get PR title
        env:
          MANUAL_BUILD_TITLE: ${{ github.event.inputs.title }}
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          if [ -z "$MANUAL_BUILD_TITLE" ]; then
            TMP_TITLE=$(echo "$PR_TITLE")
            echo "TITLE=$TMP_TITLE" >> $GITHUB_ENV
          else
            TMP_TITLE=$(echo "$MANUAL_BUILD_TITLE")
            echo "TITLE=$TMP_TITLE" >> $GITHUB_ENV
          fi
      - name: Update Model According To Specification
        working-directory: js-client
        run: |
          npm install
          ./update-models.sh
      - name: Push Changes Back To Client Repo
        working-directory: js-client
        run: |
          git checkout -b ${GITHUB_SHA::8}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add --all
          git commit -m "${{ env.TITLE }}" -a
          git push --set-upstream origin ${GITHUB_SHA::8}
          gh pr create --fill --draft --base develop
        env:
          GITHUB_TOKEN: ${{ secrets.REGULA_GITHUB_PUSH_TOKEN }}

  update-java-client:
    runs-on: ubuntu-latest
    steps:
      - name: Specify Java Version
        uses: actions/setup-java@v1
        with:
          java-version: 11
          java-package: jdk
      - name: Checkout Specification Repo
        uses: actions/checkout@v4
        with:
          path: 'DocumentReader-web-openapi'
          ref: 'develop'
      - name: Checkout Java Client Repo
        uses: actions/checkout@v4
        with:
          repository: 'regulaforensics/DocumentReader-web-java-client'
          token: ${{ secrets.REGULA_GITHUB_PUSH_TOKEN }}
          path: 'java-client'
          ref: 'develop'
      - name: Get PR title
        env:
          MANUAL_BUILD_TITLE: ${{ github.event.inputs.title }}
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          if [ -z "$MANUAL_BUILD_TITLE" ]; then
            TMP_TITLE=$(echo "$PR_TITLE")
            echo "TITLE=$TMP_TITLE" >> $GITHUB_ENV
          else
            TMP_TITLE=$(echo "$MANUAL_BUILD_TITLE")
            echo "TITLE=$TMP_TITLE" >> $GITHUB_ENV
          fi
      - name: Update Model According To Specification
        working-directory: java-client
        run: |
          ./update-models.sh
      - name: Push Changes Back To Client Repo
        working-directory: java-client
        run: |
          git checkout -b ${GITHUB_SHA::8}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add --all
          git commit -m "${{ env.TITLE }}" -a
          git push --set-upstream origin ${GITHUB_SHA::8}
          gh pr create --fill --draft --base develop
        env:
          GITHUB_TOKEN: ${{ secrets.REGULA_GITHUB_PUSH_TOKEN }}

  update-python-client:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Specification Repo
        uses: actions/checkout@v4
        with:
          path: 'DocumentReader-web-openapi'
          ref: 'develop'
      - name: Checkout Python Client Repo
        uses: actions/checkout@v4
        with:
          repository: 'regulaforensics/DocumentReader-web-python-client'
          token: ${{ secrets.REGULA_GITHUB_PUSH_TOKEN }}
          path: 'python-client'
          ref: 'develop'
      - name: Get PR title
        env:
          MANUAL_BUILD_TITLE: ${{ github.event.inputs.title }}
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          if [ -z "$MANUAL_BUILD_TITLE" ]; then
            TMP_TITLE=$(echo "$PR_TITLE")
            echo "TITLE=$TMP_TITLE" >> $GITHUB_ENV
          else
            TMP_TITLE=$(echo "$MANUAL_BUILD_TITLE")
            echo "TITLE=$TMP_TITLE" >> $GITHUB_ENV
          fi
      - name: Update Model According To Specification
        working-directory: python-client
        run: |
          ./update-models.sh
      - name: Push Changes Back To Client Repo
        working-directory: python-client
        run: |
          git checkout -b ${GITHUB_SHA::8}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add --all
          git commit -m "${{ env.TITLE }}" -a
          git push --set-upstream origin ${GITHUB_SHA::8}
          gh pr create --fill --draft --base develop
        env:
          GITHUB_TOKEN: ${{ secrets.REGULA_GITHUB_PUSH_TOKEN }}

  update-csharp-client:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Specification Repo
        uses: actions/checkout@v4
        with:
          path: 'DocumentReader-web-openapi'
          ref: 'develop'
      - name: Checkout C# Client Repo
        uses: actions/checkout@v4
        with:
          repository: 'regulaforensics/DocumentReader-web-csharp-client'
          token: ${{ secrets.REGULA_GITHUB_PUSH_TOKEN }}
          path: 'csharp-client'
          ref: 'develop'
      - name: Get PR title
        env:
          MANUAL_BUILD_TITLE: ${{ github.event.inputs.title }}
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          if [ -z "$MANUAL_BUILD_TITLE" ]; then
            TMP_TITLE=$(echo "$PR_TITLE")
            echo "TITLE=$TMP_TITLE" >> $GITHUB_ENV
          else
            TMP_TITLE=$(echo "$MANUAL_BUILD_TITLE")
            echo "TITLE=$TMP_TITLE" >> $GITHUB_ENV
          fi
      - name: Update Model According To Specification
        working-directory: csharp-client
        run: |
          ./update-models.sh
      - name: Push Changes Back To Client Repo
        working-directory: csharp-client
        run: |
          git checkout -b ${GITHUB_SHA::8}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout src/Regula.DocumentReader.WebClient/Api/DefaultApi.cs src/Regula.DocumentReader.WebClient/Api/ProcessApi.cs
          git add --all
          git commit -m "${{ env.TITLE }}" -a
          git push --set-upstream origin ${GITHUB_SHA::8}
          gh pr create --fill --draft --base develop
        env:
          GITHUB_TOKEN: ${{ secrets.REGULA_GITHUB_PUSH_TOKEN }}
