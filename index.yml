openapi: 3.0.3
## add mark models as deprecated
info:
  version: 5.1.0
  title: Regula Document Reader Web API
  description: Regula Document Reader Web API

servers:
  - url: http://localhost:8080/
    description: Local on-premise installation
  - url: https://api.regulaforensics.com/
    description: Regula document reader SaaS
  - url: https://test-api.regulaforensics.com/
    description: Regula document reader test SaaS


paths:
  "/api/process":
    post:
      summary: Process list of documents images and return extracted data
      operationId: api-process
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessResponse'


components:
  schemas:

    #############################
    ############################# Requests objects

    # todo different image input types
    ProcessRequest:
      type: object
      properties:
        processParam:
          $ref: '#/components/schemas/ProcessParams'
        List:
          type: array
          items:
            $ref: '#/components/schemas/ProcessRequestImage'
      required:
        - processParam
        - List

    # todo add other options https://github.com/regulaforensics/api/issues/102
    ProcessParams:
      type: object
      properties:
        scenario:
          $ref: './common.yml#/components/schemas/Scenario'
        resultTypeOutput:
          description: "Types of results to extract. See 'Result' enum for available options."
          type: array
          items:
            $ref: './rt.yml#/components/schemas/Result'
      required:
        - scenario
      example:
        scenario: "FullProcess"
        resultTypeOutput: [1,6,9,15]

    ProcessRequestImage:
      type: object
      required:
        - ImageData
      properties:
        ImageData:
          $ref: './common.yml#/components/schemas/ImageData'
        LightIndex:
          $ref: './common.yml#/components/schemas/Light'
        page_idx:
          description: "page/image number"
          type: integer
          default: 0
      example:
        LightIndex: 6
        page_idx: 0
        ImageData:
          image: "<base46 image>"


    #############################
    ############################# Response objects
    ProcessResponse:
      type: object
      required:
        - ProcessingFinished
        - ContainerList
        - TransactionInfo
        - ChipPage
      properties:
        ChipPage:
          $ref: "#/components/schemas/RfidLocation"
        ProcessingFinished:
          $ref: "#/components/schemas/ProcessingStatus"
        ContainerList:
          $ref: "./rt.yml#/components/schemas/ContainerList"
        TransactionInfo:
          $ref: "#/components/schemas/TransactionInfo"

    ProcessingStatus:
      type: integer
      enum:
        - 0
        - 1
      x-enum-descriptions:
        - 'Processing not finished yet'
        - 'Processing already finished'
      x-enum-varnames:
        - 'NOT_FINISHED'
        - 'FINISHED'

    TransactionInfo:
      type: object
      properties:
        ComputerName:
          type: string
        DateTime:
          type: string
        TransactionID:
          type: string
        UserName:
          type: string
      example:
        ComputerName: "7cded6852d20"
        "DateTime": "2020-05-27T08:17:03.247Z"
        "TransactionID": "dc5eb444-ad6e-4ebc-8102-d62d5bb56a4e"
        "UserName": "user"
