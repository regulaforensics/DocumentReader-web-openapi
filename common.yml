openapi: 3.0.3


components:
  parameters:
    x-request:
      in: header
      name: X-RequestID
      schema:
        type: string

  schemas:
    PageIndex:
      description: "Page index of the image from input list"
      type: integer

    Source:
      description: "Document data sources"
      type: string
      enum:
        - "MRZ"
        - "VISUAL"
        - "BARCODE"
        - "RFID"
        - "MAGNETIC"
      x-enum-varnames:
        - "MRZ"
        - "VISUAL"
        - "BARCODE"
        - "RFID"
        - "MAGNETIC"
      x-enum-descriptions:
        - "Machine readable zone (MRZ)"
        - "Visual zone"
        - "Barcode"
        - "RFID"
        - "Magnetic"

    CheckResult:
      type: integer
      description: "0 - result is negative; 1 - result is positive; 2 - —Åheck was not performed"
      enum:
        - 0
        - 1
        - 2
      x-enum-varnames:
        - "ERROR"
        - "OK"
        - "WAS_NOT_DONE"
      x-enum-descriptions:
        - "Check was performed and result is NEGATIVE"
        - "Check was performed and result is POSITIVE"
        - "Check was NOT PERFORMED"

    # todo update x-enum-descriptions
    Scenario:
      type: string
      description: "Document processing scenario"
      enum:
        - "Mrz"
        - "Barcode"
        - "Locate"
        - "Ocr"
        - "DocType"
        - "MrzOrBarcode"
        - "MrzOrLocate"
        - "MrzAndLocate"
        - "BarcodeAndLocate"
        - "MrzOrOcr"
        - "MrzOrBarcodeOrOcr"
        - "LocateVisual_And_MrzOrOcr"
        - "FullProcess"
        - "FullAuth"
        - "RusStamp"
        - "OcrFree"
        - "CreditCard"
        - "Capture"
      x-enum-varnames:
        - "MRZ"
        - "BARCODE"
        - "LOCATE"
        - "OCR"
        - "DOCTYPE"
        - "MRZ_OR_BARCODE"
        - "MRZ_OR_LOCATE"
        - "MRZ_AND_LOCATE"
        - "BARCODE_AND_LOCATE"
        - "MRZ_OR_OCR"
        - "MRZ_OR_BARCODE_OR_OCR"
        - "LOCATE_VISUAL_AND_MRZ_OR_OCR"
        - "FULL_PROCESS"
        - "FULL_AUTH"
        - "RUS_STAMP"
        - "OCR_FREE"
        - "CREDIT_CARD"
        - "CAPTURE"
      x-enum-descriptions:
        - "Processing scenario for obtaining MRZ data"
        - "Processing scenario for obtaining barcode data"
        - "Processing scenario for detecting document boundaries"
        - "Processing scenario for obtaining visual zone OCR results"
        - "Processing scenario for document type recognition"
        - "Processing scenario for obtaining MRZ and/or barcode data"
        - "Processing scenario for detecting document boundaries and/or obtaining MRZ data"
        - "Processing scenario for detecting document boundaries and obtaining MRZ data"
        - "Processing scenario for detecting the document boundaries and obtaining barcode data"
        - "Processing scenario for obtaining MRZ data or visual zone OCR results"
        - "Processing scenario for obtaining MRZ or barcode or visual zone OCR results"
        - "Processing scenario for detecting document boundaries and obtaining MRZ data or visual zone OCR results"
        - "Processing scenario for obtaining all document data"
        - "Processing scenario for obtaining all document data and document authentication"
        - "Processing scenario for obtaining data from registration stamps"
        - "Processing scenario for obtaining OCR results of any image"
        - "Processing scenario for obtaining bank card data"
        - "Scenario for obtaining an original image without any processing"

    ImageData:
      type: object
      required:
        - image
      properties:
        image:
          $ref: "#/components/schemas/ImageBase64"

    ImageTransactionData:
      type: array
      items:
        $ref: './rt-images.yml#/components/schemas/ImagesFieldValue'

    ImageBase64:
      description: "Base64 encoded image"
      type: string
      format: base64
      example: "Base64 encoded image"

    RectangleCoordinates:
      description: "Coordinates of the rectangle region on a document image(result type 1). Represented by two points - (left, top) + (right, bottom)"
      type: object
      required:
        - left
        - top
        - right
        - bottom
      properties:
        left:
          type: integer
        top:
          type: integer
        right:
          type: integer
        bottom:
          type: integer

    RfidLocation:
      type: integer
      description: "Determines the presence and location of an RFID chip in a document. 0 - no rfid chip; 1 - chip is located in the document data page; 2 - chip is located in the back page or inlay of the document"
      enum:
        - 0
        - 1
        - 2
      x-enum-descriptions:
        - "There is no RFID chip in the document"
        - "The RFID chip is located in the document data page"
        - "The RFID chip is located in the back page or inlay of the document"
      x-enum-varnames:
        - "NONE"
        - "MAIN_PAGE"
        - "BACK_PAGE"

    RfidOrigin:
      type: object
      description: "Location of data in RFID chip"
      required:
        - dg
      properties:
        dg:
          description: "Source data group file"
          type: integer
        dgTag:
          description: "Index of the source record of the image with biometric information in the information data group"
          type: integer
        tagEntry:
          description: "Index of the template in the record with biometric data"
          type: integer
        entryView:
          description: "Index of the variant of the biometric data template"
          type: integer

    Light:
      type: integer
      description: "Image light index"
      enum:
        - 0
        - 6
        - 24
        - 128
      x-enum-descriptions:
        - "No Light"
        - "White"
        - "Infrared"
        - "Ultraviolet"
      x-enum-varnames:
        - "OFF"
        - "WHITE"
        - "IR"
        - "UV"

    Point:
      type: object
      properties:
        x:
          type: integer
        y:
          type: integer

    License:
      description: "Base64 encoded data"
      type: string
      format: byte
      example: "Base64 encoded data"

    EncryptedRCL:
      description: "Base64 encoded data"
      type: string
      format: byte
      example: "Base64 encoded data"

    FaceApi:
      type: object
      properties:
        url:
          type: string
          example: "https://faceapi.regulaforensics.com"
          description: "The URL of the Regula Face Web service to be used."
        mode:
          type: string
          example: "match"
          description: "The processing mode: \"match\" or \"match+search\"."
        search:
          type: object
          description: "A search filter that can be applied if the \"match+search\" mode is enabled. May include limit, threshold, group_ids. If the group_ids are specified, the search is performed only in these groups. Find more information in the <a href=\"https://dev.regulaforensics.com/FaceSDK-web-openapi/#tag/search/operation/search\" target=\"_blank\">OpenAPI documentation</a>."
          properties:
            limit:
              type: integer
              description: "The maximum number of results to be returned."
            threshold:
              type: float
              description: "The similarity threshold."
            group_ids:
              type: array
              items:
                type: integer
              description: " The groups where to conduct the search."
        threshold:
          type: integer
          example: 75
          description: "The similarity threshold, 0-100. Above 75 means that the faces' similarity is verified, below 75 is not."
        serviceTimeout:
          type: integer
          example: 3000
          description: "The Regula Face Web service requests timeout, ms."
        proxy:
          type: string
          example: "http://localhost:8080"
          description: "Proxy to use, should be set according to the <a href=\"https://curl.se/libcurl/c/CURLOPT_PROXY.html\" target=\"_blank\">cURL standard</a>."
        proxy_userpwd:
          type: string
          example: "user:pass"
          description: "Username and password to use for proxy authentication, should be set according to the <a href=\"https://curl.se/libcurl/c/CURLOPT_PROXYUSERPWD.html\" target=\"_blank\">cURL standard</a>."
        proxy_type:
          type: integer
          example: 0
          description: "Proxy protocol type, should be set according to the <a href=\"https://curl.se/libcurl/c/CURLOPT_PROXYTYPE.html\" target=\"_blank\">cURL standard</a>."
